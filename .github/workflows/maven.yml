# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Get Build Start Current Time
    - name: Get Build Start Current Time
      uses: 1466587594/get-current-time@v2
      id: build-start-time
      with:
        format: YYYYMMDD-HH
        utcOffset: "+09:00" #한국 시간에 맞추기

    # Show Build Start Time
    - name: Build Start Time
      env:
        TIME: "${{ steps.build-start-time.outputs.time }}"
        R_TIME: "${{ steps.build-start-time.outputs.readableTime }}"
        F_TIME: "${{ steps.build-start-time.outputs.formattedTime }}"
        YEAR: "${{ steps.build-start-time.outputs.year }}"
        DAY: "${{ steps.build-start-time.outputs.day }}"
      run: echo Build Start Time $TIME $R_TIME $F_TIME $YEAR $DAY

    # Checkout
    - uses: actions/checkout@v2

    # Set up JDK
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    # Caching dependencies
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # Build
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Get Build End Current Time
    - name: Get Build End Current Time
      uses: 1466587594/get-current-time@v2
      id: build-end-time
      with:
        format: YYYYMMDD-HH
        utcOffset: "+09:00" #한국 시간에 맞추기
    # Show Build End Time
    - name: Show Build End Time
      env:
        TIME: "${{ steps.build-end-time.outputs.time }}"
        R_TIME: "${{ steps.build-end-time.outputs.readableTime }}"
        F_TIME: "${{ steps.build-end-time.outputs.formattedTime }}"
        YEAR: "${{ steps.build-end-time.outputs.year }}"
        DAY: "${{ steps.build-end-time.outputs.day }}"
      run: echo Build End Time $TIME $R_TIME $F_TIME $YEAR $DAY

    # Code Deploy
    - name: Make zip file #1
      run: zip -qq -r .//$GITHUB_SHA.zip
      shell: bash

    - name: Configure AWS credentials #2
      users: aws-actions/configurre-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY}}
        aws-scret-access-key-id: ${{ secrets.ACCESS_KEY_SECRET}}
        aws-regin: ap-northeast-2

    - name: Upload to S3 #3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://code-deploy-test-s3/$GITHUB_SHA.zip

    - name: Code Deploy #4
      run: aws deploy create-deployment --application-name CodeDeployTest
        --deployment-config-name CodeDeployDefault.OneAtATime
        --deployment-group-name dev
        --s3-location bucket=code-deploy-test-s3,bundleType=zip,key=$GITHUB_SHA.zip